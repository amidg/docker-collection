# Demo Docker Container that can be used for both vision, robotics and ML
# Demo container supports only arm64 because it is targeting L4T platform
# JetPack container is used because it has most complete set of Nvidia APIs and frameworks
# JetPack 6 already contains python3.10
FROM ubuntu:jammy
ARG TARGETARCH
ARG ROS_VERSION=humble
LABEL maintainer="Dmitrii<dmitrii@industrialnext.ai>"
LABEL description="ROS2 Humble container w/ OpenCV"


# ------------------ Ubuntu Setup ------------------ #  
ENV DEBIAN_FRONTEND=noninteractive
RUN apt update -qy && apt upgrade -qy && \
	apt install -qy build-essential software-properties-common
RUN add-apt-repository -y universe && \
    add-apt-repository -y multiverse && \
    apt update -qy && \
    apt upgrade -qy
RUN apt install -qy wget gpg-agent gnupg2 curl git gcc cmake make \
	g++ lsb-release vim bash-completion tzdata htop inxi neofetch \
	gdb xterm tmux dirmngr


# ------------------ Python setup ------------------ #  
RUN apt update -qy && apt upgrade -qy && \
	apt install -qy python3-dev python3-setuptools python3-wheel \
    python3-distutils python3-pip python3-venv python3-argcomplete


# ------------------ ROS2 HUMBLE SETUP ------------------ #  
RUN apt update -qqy && apt upgrade -qqy && \
	apt install -qy locales && \
    locale-gen en_US en_US.UTF-8 && \ 
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && \
    export LANG=en_US.UTF-8
RUN apt update -qy
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
RUN apt update -y && \
	apt install -qy ros-$ROS_VERSION-desktop ros-dev-tools \
	ros-$ROS_VERSION-joint-state-publisher ros-$ROS_VERSION-joint-state-publisher-gui \
	ros-$ROS_VERSION-xacro python3-rosdep python3-colcon-common-extensions \
	python3-vcstool python3-roslaunch
RUN rm -rf /etc/ros/rosdep/sources.list.d/20-default.list && \ 
	rosdep init && \
	rosdep update
RUN apt install -qy ros-$ROS_VERSION-moveit
RUN apt install -qy ros-$ROS_VERSION-rosbridge-server

# MQTT stuff just in case
RUN apt-get update -y && \
    apt-get install -y ros-$ROS_VERSION-rosbridge-library mosquitto mosquitto-clients
RUN git clone https://github.com/industrialnext/mqtt_bridge.git && \
    cd mqtt_bridge && \
    git checkout 3406045d9a421b570caf25f13aea40f65bed8b63 && \
    pip3 install -r requirement.txt


# ------------------ Additional Setups ------------------ #
RUN echo "alias src_ros='source /opt/ros/$ROS_VERSION/setup.bash'" >> /root/.bashrc
RUN echo "alias src_ws='source /workspace/install/setup.bash'" >> /root/.bashrc
RUN echo "alias get_dep='rosdep install --ignore-src --from-paths src -y -r --rosdistro $ROS_VERSION'" >> /root/.bashrc
ENV PYTHONPATH $PYTHONPATH:/usr/local/lib/python3/dist-packages

RUN echo "source /opt/ros/humble/setup.bash" >> /root/.bashrc
RUN echo "export ROS_DOMAIN_ID=42" >> /root/.bashrc
ENTRYPOINT ["/bin/bash"]
